AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation template for SQL Server to Amazon S3 replication with DMS

Parameters:
  ExistsDMSVPCRole:
    Default: "N"
    Description: "If the dms-vpc-role exists in your account, please enter Y, else enter N"
    Type: String
    MinLength: "1"
    MaxLength: "1"
    AllowedPattern: "[YN]"
    ConstraintDescription: Permitted value is Y or N.
  ExistsDMSCloudwatchRole:
    Default: "N"
    Description: >-
      If the dms-cloudwatch-logs-role exists in your account, please enter Y,
      else enter N
    Type: String
    MinLength: "1"
    MaxLength: "1"
    AllowedPattern: "[YN]"
    ConstraintDescription: Permitted value is Y or N.
  SourceEndpoint:
    Type: String
    Description: SQL Server endpoint details (e.g., endpoint, port, username, password)
    Default: sqldatabase.cdh9x9twxviv.us-east-1.rds.amazonaws.com
  SourcePort:
    Type: Number
    Description: SQL Server endpoint details (e.g., endpoint, port, username, password)
    Default: 1433
  SourceUsername:
    Type: String
    Description: SQL Server endpoint details (e.g., endpoint, port, username, password)
    Default: admin
  SourcePassword:
    Type: String
    Description: SQL Server endpoint details (e.g., endpoint, port, username, password)
    Default: password
  SourceDatabasename:
    Type: String
    Description: SQL Server endpoint details (e.g., endpoint, port, username, password)
    Default: test_db
  TargetS3Bucket:
    Type: String
    Description: S3 Bucket Name

Conditions:
  NotExistsDMSVPCRole: !Equals [!Ref ExistsDMSVPCRole, "N"]
  NotExistsDMSCloudwatchRole: !Equals [!Ref ExistsDMSCloudwatchRole, "N"]

Resources:
  DMSCloudwatchRole:
    Type: "AWS::IAM::Role"
    Condition: NotExistsDMSCloudwatchRole
    Properties:
      RoleName: dms-cloudwatch-logs-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - dms.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole"
      Path: /
  DMSVPCRole:
    Type: "AWS::IAM::Role"
    Condition: NotExistsDMSVPCRole
    Properties:
      RoleName: "dms-vpc-role"
      AssumeRolePolicyDocument:
        Statement:
          - Principal:
              Service: "dms.amazonaws.com"
            Action:
              - "sts:AssumeRole"
            Effect: Allow
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole"
  S3TargetDMSRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: dms-s3-target-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - dms.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: S3AccessForDMSPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:DeleteObject"
                Resource:
                  - !Sub arn:aws:s3:::${TargetS3Bucket}
                  - !Sub arn:aws:s3:::${TargetS3Bucket}/*
              - Effect: Allow
                Action: "s3:ListBucket"
                Resource: !Sub arn:aws:s3:::${TargetS3Bucket}
  DMSReplicationInstance:
    Type: AWS::DMS::ReplicationInstance
    Properties:
      ReplicationInstanceIdentifier: SQLServerS3RepInstanceV2
      ReplicationInstanceClass: dms.t3.micro
      PubliclyAccessible: true
    DependsOn: DMSVPCRole
  SQLServerSourceEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointIdentifier: SourceSQLServer
      EndpointType: source
      EngineName: sqlserver
      Username: !Ref SourceUsername
      Password: !Ref SourcePassword
      ServerName: !Ref SourceEndpoint
      Port: !Ref SourcePort
      DatabaseName: !Ref SourceDatabasename
    DependsOn: DMSReplicationInstance
  S3TargetEndpoint:
    Type: "AWS::DMS::Endpoint"
    Properties:
      EndpointType: target
      EngineName: S3
      ExtraConnectionAttributes: addColumnName=true
      S3Settings:
        BucketName: !Ref TargetS3Bucket
        ServiceAccessRoleArn: !GetAtt "S3TargetDMSRole.Arn"
    DependsOn:
      - DMSReplicationInstance
      - S3TargetDMSRole
  DMSReplicationTask:
    Type: "AWS::DMS::ReplicationTask"
    Properties:
      MigrationType: "full-load-and-cdc"
      ReplicationInstanceArn: !Ref DMSReplicationInstance
      SourceEndpointArn: !Ref SQLServerSourceEndpoint
      TargetEndpointArn: !Ref S3TargetEndpoint
      ReplicationTaskSettings: >-
        { "Logging" : { "EnableLogging" : true, "LogComponents": [ { "Id" :
        "SOURCE_UNLOAD", "Severity" : "LOGGER_SEVERITY_DEFAULT" }, { "Id" :
        "SOURCE_CAPTURE", "Severity" : "LOGGER_SEVERITY_DEFAULT" }, { "Id" :
        "TARGET_LOAD", "Severity" : "LOGGER_SEVERITY_DEFAULT" }, { "Id" :
        "TARGET_APPLY", "Severity" : "LOGGER_SEVERITY_DEFAULT" } ] } }
      TableMappings: >-
        { "rules": [ { "rule-type" : "selection", "rule-id" : "1", "rule-name" :
        "1", "object-locator" : { "schema-name" : "dbo", "table-name" :
        "Employees" }, "rule-action" : "include" } ] }
    DependsOn:
      - SQLServerSourceEndpoint
      - S3TargetEndpoint
      - DMSReplicationInstance
